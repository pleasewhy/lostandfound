<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.cfc.lostandfound.dao.ApplyLostMsgDao">
  <resultMap id="BaseResultMap" type="team.cfc.lostandfound.model.ApplyLostMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="wx_user_id" jdbcType="INTEGER" property="wxUserId" />
    <result column="lost_item_id" jdbcType="INTEGER" property="lostItemId" />
    <result column="region_id" jdbcType="INTEGER" property="regionId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, wx_user_id, lost_item_id, region_id, `status`, apply_time
  </sql>
  <select id="selectByExample" parameterType="team.cfc.lostandfound.model.ApplyLostMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply_lost_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apply_lost_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apply_lost_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.cfc.lostandfound.model.ApplyLostMsgExample">
    delete from apply_lost_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="team.cfc.lostandfound.model.ApplyLostMsg" useGeneratedKeys="true">
    insert into apply_lost_msg (wx_user_id, lost_item_id, region_id, 
      `status`, apply_time)
    values (#{wxUserId,jdbcType=INTEGER}, #{lostItemId,jdbcType=INTEGER}, #{regionId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="team.cfc.lostandfound.model.ApplyLostMsg" useGeneratedKeys="true">
    insert into apply_lost_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wxUserId != null">
        wx_user_id,
      </if>
      <if test="lostItemId != null">
        lost_item_id,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wxUserId != null">
        #{wxUserId,jdbcType=INTEGER},
      </if>
      <if test="lostItemId != null">
        #{lostItemId,jdbcType=INTEGER},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.cfc.lostandfound.model.ApplyLostMsgExample" resultType="java.lang.Long">
    select count(*) from apply_lost_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update apply_lost_msg
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.wxUserId != null">
        wx_user_id = #{record.wxUserId,jdbcType=INTEGER},
      </if>
      <if test="record.lostItemId != null">
        lost_item_id = #{record.lostItemId,jdbcType=INTEGER},
      </if>
      <if test="record.regionId != null">
        region_id = #{record.regionId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update apply_lost_msg
    set id = #{record.id,jdbcType=INTEGER},
      wx_user_id = #{record.wxUserId,jdbcType=INTEGER},
      lost_item_id = #{record.lostItemId,jdbcType=INTEGER},
      region_id = #{record.regionId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.cfc.lostandfound.model.ApplyLostMsg">
    update apply_lost_msg
    <set>
      <if test="wxUserId != null">
        wx_user_id = #{wxUserId,jdbcType=INTEGER},
      </if>
      <if test="lostItemId != null">
        lost_item_id = #{lostItemId,jdbcType=INTEGER},
      </if>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.cfc.lostandfound.model.ApplyLostMsg">
    update apply_lost_msg
    set wx_user_id = #{wxUserId,jdbcType=INTEGER},
      lost_item_id = #{lostItemId,jdbcType=INTEGER},
      region_id = #{regionId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>