<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.cfc.lostandfound.dao.LostItemDao">
  <resultMap id="BaseResultMap" type="team.cfc.lostandfound.model.LostItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="picker_id" jdbcType="INTEGER" property="pickerId" />
    <result column="pick_time" jdbcType="VARCHAR" property="pickTime" />
    <result column="pick_address" jdbcType="VARCHAR" property="pickAddress" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="region_id" jdbcType="INTEGER" property="regionId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
    <result column="recover_method" jdbcType="INTEGER" property="recoverMethod" />
    <result column="recover_details" jdbcType="VARCHAR" property="recoverDetails" />
    <result column="receive_location" jdbcType="VARCHAR" property="receiveLocation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, description, picker_id, pick_time, pick_address, image_url, `label`, region_id, 
    `status`, submit_time, recover_method, recover_details, receive_location
  </sql>
  <select id="selectByExample" parameterType="team.cfc.lostandfound.model.LostItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lost_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lost_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lost_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.cfc.lostandfound.model.LostItemExample">
    delete from lost_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="team.cfc.lostandfound.model.LostItem" useGeneratedKeys="true">
    insert into lost_item (description, picker_id, pick_time, 
      pick_address, image_url, `label`, 
      region_id, `status`, submit_time, 
      recover_method, recover_details, receive_location
      )
    values (#{description,jdbcType=VARCHAR}, #{pickerId,jdbcType=INTEGER}, #{pickTime,jdbcType=VARCHAR}, 
      #{pickAddress,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, 
      #{regionId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{submitTime,jdbcType=TIMESTAMP}, 
      #{recoverMethod,jdbcType=INTEGER}, #{recoverDetails,jdbcType=VARCHAR}, #{receiveLocation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="team.cfc.lostandfound.model.LostItem" useGeneratedKeys="true">
    insert into lost_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="description != null">
        description,
      </if>
      <if test="pickerId != null">
        picker_id,
      </if>
      <if test="pickTime != null">
        pick_time,
      </if>
      <if test="pickAddress != null">
        pick_address,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="label != null">
        `label`,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="submitTime != null">
        submit_time,
      </if>
      <if test="recoverMethod != null">
        recover_method,
      </if>
      <if test="recoverDetails != null">
        recover_details,
      </if>
      <if test="receiveLocation != null">
        receive_location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="pickerId != null">
        #{pickerId,jdbcType=INTEGER},
      </if>
      <if test="pickTime != null">
        #{pickTime,jdbcType=VARCHAR},
      </if>
      <if test="pickAddress != null">
        #{pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null">
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recoverMethod != null">
        #{recoverMethod,jdbcType=INTEGER},
      </if>
      <if test="recoverDetails != null">
        #{recoverDetails,jdbcType=VARCHAR},
      </if>
      <if test="receiveLocation != null">
        #{receiveLocation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.cfc.lostandfound.model.LostItemExample" resultType="java.lang.Long">
    select count(*) from lost_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lost_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.pickerId != null">
        picker_id = #{record.pickerId,jdbcType=INTEGER},
      </if>
      <if test="record.pickTime != null">
        pick_time = #{record.pickTime,jdbcType=VARCHAR},
      </if>
      <if test="record.pickAddress != null">
        pick_address = #{record.pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        `label` = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.regionId != null">
        region_id = #{record.regionId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.submitTime != null">
        submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recoverMethod != null">
        recover_method = #{record.recoverMethod,jdbcType=INTEGER},
      </if>
      <if test="record.recoverDetails != null">
        recover_details = #{record.recoverDetails,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveLocation != null">
        receive_location = #{record.receiveLocation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lost_item
    set id = #{record.id,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      picker_id = #{record.pickerId,jdbcType=INTEGER},
      pick_time = #{record.pickTime,jdbcType=VARCHAR},
      pick_address = #{record.pickAddress,jdbcType=VARCHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      `label` = #{record.label,jdbcType=VARCHAR},
      region_id = #{record.regionId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      recover_method = #{record.recoverMethod,jdbcType=INTEGER},
      recover_details = #{record.recoverDetails,jdbcType=VARCHAR},
      receive_location = #{record.receiveLocation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.cfc.lostandfound.model.LostItem">
    update lost_item
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="pickerId != null">
        picker_id = #{pickerId,jdbcType=INTEGER},
      </if>
      <if test="pickTime != null">
        pick_time = #{pickTime,jdbcType=VARCHAR},
      </if>
      <if test="pickAddress != null">
        pick_address = #{pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        `label` = #{label,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null">
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recoverMethod != null">
        recover_method = #{recoverMethod,jdbcType=INTEGER},
      </if>
      <if test="recoverDetails != null">
        recover_details = #{recoverDetails,jdbcType=VARCHAR},
      </if>
      <if test="receiveLocation != null">
        receive_location = #{receiveLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.cfc.lostandfound.model.LostItem">
    update lost_item
    set description = #{description,jdbcType=VARCHAR},
      picker_id = #{pickerId,jdbcType=INTEGER},
      pick_time = #{pickTime,jdbcType=VARCHAR},
      pick_address = #{pickAddress,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      `label` = #{label,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      recover_method = #{recoverMethod,jdbcType=INTEGER},
      recover_details = #{recoverDetails,jdbcType=VARCHAR},
      receive_location = #{receiveLocation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>