<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.cfc.lostandfound.dao.LostItemDao">
  <resultMap id="BaseResultMap" type="team.cfc.lostandfound.model.LostItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="picker" jdbcType="VARCHAR" property="picker" />
    <result column="pick_date" jdbcType="DATE" property="pickDate" />
    <result column="pick_address" jdbcType="VARCHAR" property="pickAddress" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="owner_name" jdbcType="VARCHAR" property="ownerName" />
    <result column="owner_telephone" jdbcType="VARCHAR" property="ownerTelephone" />
    <result column="return_time" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="region_id" jdbcType="INTEGER" property="regionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, description, picker, pick_date, pick_address, image, `status`, owner_name, 
    owner_telephone, return_time, region_id
  </sql>
  <select id="selectByExample" parameterType="team.cfc.lostandfound.model.LostItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lost_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lost_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lost_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.cfc.lostandfound.model.LostItemExample">
    delete from lost_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="team.cfc.lostandfound.model.LostItem" useGeneratedKeys="true">
    insert into lost_item (`name`, description, picker, 
      pick_date, pick_address, image, 
      `status`, owner_name, owner_telephone, 
      return_time, region_id)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{picker,jdbcType=VARCHAR}, 
      #{pickDate,jdbcType=DATE}, #{pickAddress,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{ownerName,jdbcType=VARCHAR}, #{ownerTelephone,jdbcType=VARCHAR}, 
      #{returnTime,jdbcType=TIMESTAMP}, #{regionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="team.cfc.lostandfound.model.LostItem" useGeneratedKeys="true">
    insert into lost_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="picker != null">
        picker,
      </if>
      <if test="pickDate != null">
        pick_date,
      </if>
      <if test="pickAddress != null">
        pick_address,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="ownerTelephone != null">
        owner_telephone,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="picker != null">
        #{picker,jdbcType=VARCHAR},
      </if>
      <if test="pickDate != null">
        #{pickDate,jdbcType=DATE},
      </if>
      <if test="pickAddress != null">
        #{pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="ownerTelephone != null">
        #{ownerTelephone,jdbcType=VARCHAR},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.cfc.lostandfound.model.LostItemExample" resultType="java.lang.Long">
    select count(*) from lost_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lost_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.picker != null">
        picker = #{record.picker,jdbcType=VARCHAR},
      </if>
      <if test="record.pickDate != null">
        pick_date = #{record.pickDate,jdbcType=DATE},
      </if>
      <if test="record.pickAddress != null">
        pick_address = #{record.pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.ownerName != null">
        owner_name = #{record.ownerName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerTelephone != null">
        owner_telephone = #{record.ownerTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.returnTime != null">
        return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regionId != null">
        region_id = #{record.regionId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lost_item
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      picker = #{record.picker,jdbcType=VARCHAR},
      pick_date = #{record.pickDate,jdbcType=DATE},
      pick_address = #{record.pickAddress,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      owner_name = #{record.ownerName,jdbcType=VARCHAR},
      owner_telephone = #{record.ownerTelephone,jdbcType=VARCHAR},
      return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      region_id = #{record.regionId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.cfc.lostandfound.model.LostItem">
    update lost_item
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="picker != null">
        picker = #{picker,jdbcType=VARCHAR},
      </if>
      <if test="pickDate != null">
        pick_date = #{pickDate,jdbcType=DATE},
      </if>
      <if test="pickAddress != null">
        pick_address = #{pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="ownerTelephone != null">
        owner_telephone = #{ownerTelephone,jdbcType=VARCHAR},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.cfc.lostandfound.model.LostItem">
    update lost_item
    set `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      picker = #{picker,jdbcType=VARCHAR},
      pick_date = #{pickDate,jdbcType=DATE},
      pick_address = #{pickAddress,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      owner_name = #{ownerName,jdbcType=VARCHAR},
      owner_telephone = #{ownerTelephone,jdbcType=VARCHAR},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      region_id = #{regionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>